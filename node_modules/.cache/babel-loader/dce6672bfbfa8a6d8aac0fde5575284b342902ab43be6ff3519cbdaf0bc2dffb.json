{"ast":null,"code":"import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) {\n      return new DropCursorView(editorView, options);\n    }\n  });\n}\nclass DropCursorView {\n  constructor(editorView, options) {\n    var _a;\n    this.editorView = editorView;\n    this.cursorPos = null;\n    this.element = null;\n    this.timeout = -1;\n    this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n    this.color = options.color === false ? undefined : options.color || \"black\";\n    this.class = options.class;\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => {\n        this[name](e);\n      };\n      editorView.dom.addEventListener(name, handler);\n      return {\n        name,\n        handler\n      };\n    });\n  }\n  destroy() {\n    this.handlers.forEach(({\n      name,\n      handler\n    }) => this.editorView.dom.removeEventListener(name, handler));\n  }\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n      if (this.cursorPos > editorView.state.doc.content.size) this.setCursor(null);else this.updateOverlay();\n    }\n  }\n  setCursor(pos) {\n    if (pos == this.cursorPos) return;\n    this.cursorPos = pos;\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element);\n      this.element = null;\n    } else {\n      this.updateOverlay();\n    }\n  }\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n    let isBlock = !$pos.parent.inlineContent,\n      rect;\n    let editorDOM = this.editorView.dom,\n      editorRect = editorDOM.getBoundingClientRect();\n    let scaleX = editorRect.width / editorDOM.offsetWidth,\n      scaleY = editorRect.height / editorDOM.offsetHeight;\n    if (isBlock) {\n      let before = $pos.nodeBefore,\n        after = $pos.nodeAfter;\n      if (before || after) {\n        let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n        if (node) {\n          let nodeRect = node.getBoundingClientRect();\n          let top = before ? nodeRect.bottom : nodeRect.top;\n          if (before && after) top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n          let halfWidth = this.width / 2 * scaleY;\n          rect = {\n            left: nodeRect.left,\n            right: nodeRect.right,\n            top: top - halfWidth,\n            bottom: top + halfWidth\n          };\n        }\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos);\n      let halfWidth = this.width / 2 * scaleX;\n      rect = {\n        left: coords.left - halfWidth,\n        right: coords.left + halfWidth,\n        top: coords.top,\n        bottom: coords.bottom\n      };\n    }\n    let parent = this.editorView.dom.offsetParent;\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"));\n      if (this.class) this.element.className = this.class;\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n      if (this.color) {\n        this.element.style.backgroundColor = this.color;\n      }\n    }\n    this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n    this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n    let parentLeft, parentTop;\n    if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n      parentLeft = -pageXOffset;\n      parentTop = -pageYOffset;\n    } else {\n      let rect = parent.getBoundingClientRect();\n      let parentScaleX = rect.width / parent.offsetWidth,\n        parentScaleY = rect.height / parent.offsetHeight;\n      parentLeft = rect.left - parent.scrollLeft * parentScaleX;\n      parentTop = rect.top - parent.scrollTop * parentScaleY;\n    }\n    this.element.style.left = (rect.left - parentLeft) / scaleX + \"px\";\n    this.element.style.top = (rect.top - parentTop) / scaleY + \"px\";\n    this.element.style.width = (rect.right - rect.left) / scaleX + \"px\";\n    this.element.style.height = (rect.bottom - rect.top) / scaleY + \"px\";\n  }\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => this.setCursor(null), timeout);\n  }\n  dragover(event) {\n    if (!this.editorView.editable) return;\n    let pos = this.editorView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY\n    });\n    let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n    let disableDropCursor = node && node.type.spec.disableDropCursor;\n    let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n    if (pos && !disabled) {\n      let target = pos.pos;\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n        if (point != null) target = point;\n      }\n      this.setCursor(target);\n      this.scheduleRemoval(5000);\n    }\n  }\n  dragend() {\n    this.scheduleRemoval(20);\n  }\n  drop() {\n    this.scheduleRemoval(20);\n  }\n  dragleave(event) {\n    if (!this.editorView.dom.contains(event.relatedTarget)) this.setCursor(null);\n  }\n}\nexport { dropCursor };","map":{"version":3,"names":["Plugin","dropPoint","dropCursor","options","view","editorView","DropCursorView","constructor","_a","cursorPos","element","timeout","width","color","undefined","class","handlers","map","name","handler","e","dom","addEventListener","destroy","forEach","removeEventListener","update","prevState","doc","state","content","size","setCursor","updateOverlay","pos","parentNode","removeChild","$pos","resolve","isBlock","parent","inlineContent","rect","editorDOM","editorRect","getBoundingClientRect","scaleX","offsetWidth","scaleY","height","offsetHeight","before","nodeBefore","after","nodeAfter","node","nodeDOM","nodeSize","nodeRect","top","bottom","halfWidth","left","right","coords","coordsAtPos","offsetParent","appendChild","document","createElement","className","style","cssText","backgroundColor","classList","toggle","parentLeft","parentTop","body","getComputedStyle","position","pageXOffset","pageYOffset","parentScaleX","parentScaleY","scrollLeft","scrollTop","scheduleRemoval","clearTimeout","setTimeout","dragover","event","editable","posAtCoords","clientX","clientY","inside","nodeAt","disableDropCursor","type","spec","disabled","target","dragging","slice","point","dragend","drop","dragleave","contains","relatedTarget"],"sources":["C:/Users/01/vettam-editor/node_modules/prosemirror-dropcursor/dist/index.js"],"sourcesContent":["import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        let editorDOM = this.editorView.dom, editorRect = editorDOM.getBoundingClientRect();\n        let scaleX = editorRect.width / editorDOM.offsetWidth, scaleY = editorRect.height / editorDOM.offsetHeight;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    let halfWidth = (this.width / 2) * scaleY;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - halfWidth, bottom: top + halfWidth };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            let halfWidth = (this.width / 2) * scaleX;\n            rect = { left: coords.left - halfWidth, right: coords.left + halfWidth, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            let parentScaleX = rect.width / parent.offsetWidth, parentScaleY = rect.height / parent.offsetHeight;\n            parentLeft = rect.left - parent.scrollLeft * parentScaleX;\n            parentTop = rect.top - parent.scrollTop * parentScaleY;\n        }\n        this.element.style.left = (rect.left - parentLeft) / scaleX + \"px\";\n        this.element.style.top = (rect.top - parentTop) / scaleY + \"px\";\n        this.element.style.width = (rect.right - rect.left) / scaleX + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) / scaleY + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\"\n            ? disableDropCursor(this.editorView, pos, event)\n            : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (!this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}