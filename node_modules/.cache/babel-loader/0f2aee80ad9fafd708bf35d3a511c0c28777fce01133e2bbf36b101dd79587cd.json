{"ast":null,"code":"import { Mark, mergeAttributes } from '@tiptap/core';\nexport const CustomFontSize = Mark.create({\n  name: 'fontSize',\n  addAttributes() {\n    return {\n      size: {\n        default: null,\n        parseHTML: element => element.style.fontSize,\n        renderHTML: attributes => {\n          if (!attributes.size) return {};\n          return {\n            style: `font-size: ${attributes.size}`\n          };\n        }\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      style: 'font-size'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['span', mergeAttributes(HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setFontSize: size => ({\n        commands\n      }) => {\n        return commands.setMark(this.name, {\n          size\n        });\n      }\n    };\n  }\n});","map":{"version":3,"names":["Mark","mergeAttributes","CustomFontSize","create","name","addAttributes","size","default","parseHTML","element","style","fontSize","renderHTML","attributes","HTMLAttributes","addCommands","setFontSize","commands","setMark"],"sources":["C:/Users/01/vettam-editor/src/extensions/FontSize.ts"],"sourcesContent":["import { Mark, mergeAttributes } from '@tiptap/core';\r\n\r\ndeclare module '@tiptap/core' {\r\n  interface Commands<ReturnType> {\r\n    fontSize: {\r\n      setFontSize: (size: string) => ReturnType;\r\n    };\r\n  }\r\n}\r\n\r\nexport const CustomFontSize = Mark.create({\r\n  name: 'fontSize',\r\n  addAttributes() {\r\n    return {\r\n      size: {\r\n        default: null,\r\n        parseHTML: (element) => element.style.fontSize,\r\n        renderHTML: (attributes) => {\r\n          if (!attributes.size) return {};\r\n          return { style: `font-size: ${attributes.size}` };\r\n        },\r\n      },\r\n    };\r\n  },\r\n  parseHTML() {\r\n    return [{ style: 'font-size' }];\r\n  },\r\n  renderHTML({ HTMLAttributes }) {\r\n    return ['span', mergeAttributes(HTMLAttributes), 0];\r\n  },\r\n  addCommands() {\r\n    return {\r\n      setFontSize:\r\n        (size) =>\r\n        ({ commands }) => {\r\n          return commands.setMark(this.name, { size });\r\n        },\r\n    };\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,eAAe,QAAQ,cAAc;AAUpD,OAAO,MAAMC,cAAc,GAAGF,IAAI,CAACG,MAAM,CAAC;EACxCC,IAAI,EAAE,UAAU;EAChBC,aAAaA,CAAA,EAAG;IACd,OAAO;MACLC,IAAI,EAAE;QACJC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAGC,OAAO,IAAKA,OAAO,CAACC,KAAK,CAACC,QAAQ;QAC9CC,UAAU,EAAGC,UAAU,IAAK;UAC1B,IAAI,CAACA,UAAU,CAACP,IAAI,EAAE,OAAO,CAAC,CAAC;UAC/B,OAAO;YAAEI,KAAK,EAAE,cAAcG,UAAU,CAACP,IAAI;UAAG,CAAC;QACnD;MACF;IACF,CAAC;EACH,CAAC;EACDE,SAASA,CAAA,EAAG;IACV,OAAO,CAAC;MAAEE,KAAK,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EACDE,UAAUA,CAAC;IAAEE;EAAe,CAAC,EAAE;IAC7B,OAAO,CAAC,MAAM,EAAEb,eAAe,CAACa,cAAc,CAAC,EAAE,CAAC,CAAC;EACrD,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLC,WAAW,EACRV,IAAI,IACL,CAAC;QAAEW;MAAS,CAAC,KAAK;QAChB,OAAOA,QAAQ,CAACC,OAAO,CAAC,IAAI,CAACd,IAAI,EAAE;UAAEE;QAAK,CAAC,CAAC;MAC9C;IACJ,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}