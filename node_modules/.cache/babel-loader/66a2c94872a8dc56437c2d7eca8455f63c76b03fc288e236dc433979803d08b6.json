{"ast":null,"code":"import { Extension } from '@tiptap/core';\nexport const FontFamily = Extension.create({\n  name: 'fontFamily',\n  addOptions() {\n    return {\n      types: ['textStyle']\n    };\n  },\n  addGlobalAttributes() {\n    return [{\n      types: this.options.types,\n      attributes: {\n        fontFamily: {\n          default: null,\n          parseHTML: element => element.style.fontFamily.replace(/['\"]/g, ''),\n          renderHTML: attributes => {\n            if (!attributes.fontFamily) {\n              return {};\n            }\n            return {\n              style: `font-family: ${attributes.fontFamily}`\n            };\n          }\n        }\n      }\n    }];\n  },\n  addCommands() {\n    return {\n      setFontFamily: fontFamily => ({\n        chain\n      }) => {\n        return chain().setMark('textStyle', {\n          fontFamily\n        }).run();\n      },\n      unsetFontFamily: () => ({\n        chain\n      }) => {\n        return chain().setMark('textStyle', {\n          fontFamily: null\n        }).removeEmptyTextStyle().run();\n      }\n    };\n  }\n});","map":{"version":3,"names":["Extension","FontFamily","create","name","addOptions","types","addGlobalAttributes","options","attributes","fontFamily","default","parseHTML","element","style","replace","renderHTML","addCommands","setFontFamily","chain","setMark","run","unsetFontFamily","removeEmptyTextStyle"],"sources":["C:/Users/01/vettam-editor/src/extensions/FontFamily.ts"],"sourcesContent":["import { Extension } from '@tiptap/core';\r\n\r\nexport const FontFamily = Extension.create({\r\n  name: 'fontFamily',\r\n\r\n  addOptions() {\r\n    return {\r\n      types: ['textStyle'],\r\n    };\r\n  },\r\n\r\n  addGlobalAttributes() {\r\n    return [\r\n      {\r\n        types: this.options.types,\r\n        attributes: {\r\n          fontFamily: {\r\n            default: null,\r\n            parseHTML: (element) => element.style.fontFamily.replace(/['\"]/g, ''),\r\n            renderHTML: (attributes) => {\r\n              if (!attributes.fontFamily) {\r\n                return {};\r\n              }\r\n              return {\r\n                style: `font-family: ${attributes.fontFamily}`,\r\n              };\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  },\r\n\r\n  addCommands() {\r\n    return {\r\n      setFontFamily:\r\n        (fontFamily: string) =>\r\n        ({ chain }) => {\r\n          return chain().setMark('textStyle', { fontFamily }).run();\r\n        },\r\n      unsetFontFamily:\r\n        () =>\r\n        ({ chain }) => {\r\n          return chain().setMark('textStyle', { fontFamily: null }).removeEmptyTextStyle().run();\r\n        },\r\n    };\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,UAAU,GAAGD,SAAS,CAACE,MAAM,CAAC;EACzCC,IAAI,EAAE,YAAY;EAElBC,UAAUA,CAAA,EAAG;IACX,OAAO;MACLC,KAAK,EAAE,CAAC,WAAW;IACrB,CAAC;EACH,CAAC;EAEDC,mBAAmBA,CAAA,EAAG;IACpB,OAAO,CACL;MACED,KAAK,EAAE,IAAI,CAACE,OAAO,CAACF,KAAK;MACzBG,UAAU,EAAE;QACVC,UAAU,EAAE;UACVC,OAAO,EAAE,IAAI;UACbC,SAAS,EAAGC,OAAO,IAAKA,OAAO,CAACC,KAAK,CAACJ,UAAU,CAACK,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;UACrEC,UAAU,EAAGP,UAAU,IAAK;YAC1B,IAAI,CAACA,UAAU,CAACC,UAAU,EAAE;cAC1B,OAAO,CAAC,CAAC;YACX;YACA,OAAO;cACLI,KAAK,EAAE,gBAAgBL,UAAU,CAACC,UAAU;YAC9C,CAAC;UACH;QACF;MACF;IACF,CAAC,CACF;EACH,CAAC;EAEDO,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLC,aAAa,EACVR,UAAkB,IACnB,CAAC;QAAES;MAAM,CAAC,KAAK;QACb,OAAOA,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE;UAAEV;QAAW,CAAC,CAAC,CAACW,GAAG,CAAC,CAAC;MAC3D,CAAC;MACHC,eAAe,EACbA,CAAA,KACA,CAAC;QAAEH;MAAM,CAAC,KAAK;QACb,OAAOA,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE;UAAEV,UAAU,EAAE;QAAK,CAAC,CAAC,CAACa,oBAAoB,CAAC,CAAC,CAACF,GAAG,CAAC,CAAC;MACxF;IACJ,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}