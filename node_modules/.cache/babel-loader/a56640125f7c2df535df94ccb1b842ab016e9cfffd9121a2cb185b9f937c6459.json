{"ast":null,"code":"import { Extension } from '@tiptap/core';\nexport const FontSize = Extension.create({\n  name: 'fontSize',\n  addOptions() {\n    return {\n      types: ['textStyle']\n    };\n  },\n  addGlobalAttributes() {\n    return [{\n      types: this.options.types,\n      attributes: {\n        fontSize: {\n          default: null,\n          parseHTML: element => element.style.fontSize || null,\n          renderHTML: attributes => {\n            if (!attributes.fontSize) return {};\n            return {\n              style: `font-size: ${attributes.fontSize}`\n            };\n          }\n        }\n      }\n    }];\n  },\n  addCommands() {\n    return {\n      setFontSize: size => ({\n        chain\n      }) => {\n        return chain().setMark('textStyle', {\n          fontSize: size\n        }).run();\n      },\n      unsetFontSize: () => ({\n        chain\n      }) => {\n        return chain().setMark('textStyle', {\n          fontSize: null\n        }).run();\n      }\n    };\n  }\n});","map":{"version":3,"names":["Extension","FontSize","create","name","addOptions","types","addGlobalAttributes","options","attributes","fontSize","default","parseHTML","element","style","renderHTML","addCommands","setFontSize","size","chain","setMark","run","unsetFontSize"],"sources":["C:/Users/01/vettam-editor/src/extensions/FontSize.ts"],"sourcesContent":["import { Extension } from '@tiptap/core';\r\n\r\ndeclare module '@tiptap/core' {\r\n  interface Commands<ReturnType> {\r\n    fontSize: {\r\n      setFontSize: (size: string) => ReturnType;\r\n      unsetFontSize: () => ReturnType;\r\n    };\r\n  }\r\n}\r\n\r\nexport const FontSize = Extension.create({\r\n  name: 'fontSize',\r\n\r\n  addOptions() {\r\n    return {\r\n      types: ['textStyle'],\r\n    };\r\n  },\r\n\r\n  addGlobalAttributes() {\r\n    return [\r\n      {\r\n        types: this.options.types,\r\n        attributes: {\r\n          fontSize: {\r\n            default: null,\r\n            parseHTML: (element) => element.style.fontSize || null,\r\n            renderHTML: (attributes) => {\r\n              if (!attributes.fontSize) return {};\r\n              return {\r\n                style: `font-size: ${attributes.fontSize}`,\r\n              };\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  },\r\n\r\n  addCommands() {\r\n    return {\r\n      setFontSize:\r\n        (size) =>\r\n        ({ chain }) => {\r\n          return chain().setMark('textStyle', { fontSize: size }).run();\r\n        },\r\n\r\n      unsetFontSize:\r\n        () =>\r\n        ({ chain }) => {\r\n          return chain().setMark('textStyle', { fontSize: null }).run();\r\n        },\r\n    };\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAWxC,OAAO,MAAMC,QAAQ,GAAGD,SAAS,CAACE,MAAM,CAAC;EACvCC,IAAI,EAAE,UAAU;EAEhBC,UAAUA,CAAA,EAAG;IACX,OAAO;MACLC,KAAK,EAAE,CAAC,WAAW;IACrB,CAAC;EACH,CAAC;EAEDC,mBAAmBA,CAAA,EAAG;IACpB,OAAO,CACL;MACED,KAAK,EAAE,IAAI,CAACE,OAAO,CAACF,KAAK;MACzBG,UAAU,EAAE;QACVC,QAAQ,EAAE;UACRC,OAAO,EAAE,IAAI;UACbC,SAAS,EAAGC,OAAO,IAAKA,OAAO,CAACC,KAAK,CAACJ,QAAQ,IAAI,IAAI;UACtDK,UAAU,EAAGN,UAAU,IAAK;YAC1B,IAAI,CAACA,UAAU,CAACC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnC,OAAO;cACLI,KAAK,EAAE,cAAcL,UAAU,CAACC,QAAQ;YAC1C,CAAC;UACH;QACF;MACF;IACF,CAAC,CACF;EACH,CAAC;EAEDM,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLC,WAAW,EACRC,IAAI,IACL,CAAC;QAAEC;MAAM,CAAC,KAAK;QACb,OAAOA,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE;UAAEV,QAAQ,EAAEQ;QAAK,CAAC,CAAC,CAACG,GAAG,CAAC,CAAC;MAC/D,CAAC;MAEHC,aAAa,EACXA,CAAA,KACA,CAAC;QAAEH;MAAM,CAAC,KAAK;QACb,OAAOA,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,WAAW,EAAE;UAAEV,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACW,GAAG,CAAC,CAAC;MAC/D;IACJ,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}