{"ast":null,"code":"import { Mark } from '@tiptap/core';\nexport const CustomFontSize = Mark.create({\n  name: 'fontSize',\n  addAttributes() {\n    return {\n      fontSize: {\n        default: null,\n        parseHTML: element => {\n          var _element$style$fontSi;\n          return (_element$style$fontSi = element.style.fontSize) === null || _element$style$fontSi === void 0 ? void 0 : _element$style$fontSi.replace(/['\"]/g, '');\n        },\n        renderHTML: attributes => {\n          if (!attributes.fontSize) {\n            return {};\n          }\n          return {\n            style: `font-size: ${attributes.fontSize}`\n          };\n        }\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      style: 'font-size'\n    }];\n  },\n  // ❌ REMOVE renderHTML from mark — not needed here\n\n  addCommands() {\n    return {\n      setFontSize: fontSize => ({\n        commands\n      }) => {\n        return commands.setMark(this.name, {\n          fontSize\n        });\n      },\n      unsetFontSize: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  }\n});","map":{"version":3,"names":["Mark","CustomFontSize","create","name","addAttributes","fontSize","default","parseHTML","element","_element$style$fontSi","style","replace","renderHTML","attributes","addCommands","setFontSize","commands","setMark","unsetFontSize","unsetMark"],"sources":["C:/Users/01/vettam-editor/src/extensions/FontSize.ts"],"sourcesContent":["import { Mark } from '@tiptap/core';\r\n\r\ndeclare module '@tiptap/core' {\r\n  interface MarkConfig {\r\n    fontSize?: string;\r\n  }\r\n}\r\n\r\nexport const CustomFontSize = Mark.create({\r\n  name: 'fontSize',\r\n\r\n  addAttributes() {\r\n    return {\r\n      fontSize: {\r\n        default: null,\r\n        parseHTML: (element) => element.style.fontSize?.replace(/['\"]/g, ''),\r\n        renderHTML: (attributes) => {\r\n          if (!attributes.fontSize) {\r\n            return {};\r\n          }\r\n          return {\r\n            style: `font-size: ${attributes.fontSize}`,\r\n          };\r\n        },\r\n      },\r\n    };\r\n  },\r\n\r\n  parseHTML() {\r\n    return [\r\n      {\r\n        style: 'font-size',\r\n      },\r\n    ];\r\n  },\r\n\r\n  // ❌ REMOVE renderHTML from mark — not needed here\r\n\r\n  addCommands() {\r\n    return {\r\n      setFontSize:\r\n        (fontSize: string) =>\r\n        ({ commands }) => {\r\n          return commands.setMark(this.name, { fontSize });\r\n        },\r\n      unsetFontSize:\r\n        () =>\r\n        ({ commands }) => {\r\n          return commands.unsetMark(this.name);\r\n        },\r\n    };\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,cAAc;AAQnC,OAAO,MAAMC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAAC;EACxCC,IAAI,EAAE,UAAU;EAEhBC,aAAaA,CAAA,EAAG;IACd,OAAO;MACLC,QAAQ,EAAE;QACRC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAGC,OAAO;UAAA,IAAAC,qBAAA;UAAA,QAAAA,qBAAA,GAAKD,OAAO,CAACE,KAAK,CAACL,QAAQ,cAAAI,qBAAA,uBAAtBA,qBAAA,CAAwBE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;QAAA;QACpEC,UAAU,EAAGC,UAAU,IAAK;UAC1B,IAAI,CAACA,UAAU,CAACR,QAAQ,EAAE;YACxB,OAAO,CAAC,CAAC;UACX;UACA,OAAO;YACLK,KAAK,EAAE,cAAcG,UAAU,CAACR,QAAQ;UAC1C,CAAC;QACH;MACF;IACF,CAAC;EACH,CAAC;EAEDE,SAASA,CAAA,EAAG;IACV,OAAO,CACL;MACEG,KAAK,EAAE;IACT,CAAC,CACF;EACH,CAAC;EAED;;EAEAI,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLC,WAAW,EACRV,QAAgB,IACjB,CAAC;QAAEW;MAAS,CAAC,KAAK;QAChB,OAAOA,QAAQ,CAACC,OAAO,CAAC,IAAI,CAACd,IAAI,EAAE;UAAEE;QAAS,CAAC,CAAC;MAClD,CAAC;MACHa,aAAa,EACXA,CAAA,KACA,CAAC;QAAEF;MAAS,CAAC,KAAK;QAChB,OAAOA,QAAQ,CAACG,SAAS,CAAC,IAAI,CAAChB,IAAI,CAAC;MACtC;IACJ,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}