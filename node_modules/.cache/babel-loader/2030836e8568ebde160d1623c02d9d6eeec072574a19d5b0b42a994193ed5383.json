{"ast":null,"code":"// src/underline.ts\nimport { Mark, mergeAttributes } from \"@tiptap/core\";\nvar Underline = Mark.create({\n  name: \"underline\",\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: \"u\"\n    }, {\n      style: \"text-decoration\",\n      consuming: false,\n      getAttrs: style => style.includes(\"underline\") ? {} : false\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return [\"u\", mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setUnderline: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleUnderline: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetUnderline: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-u\": () => this.editor.commands.toggleUnderline(),\n      \"Mod-U\": () => this.editor.commands.toggleUnderline()\n    };\n  }\n});\n\n// src/index.ts\nvar index_default = Underline;\nexport { Underline, index_default as default };","map":{"version":3,"names":["Mark","mergeAttributes","Underline","create","name","addOptions","HTMLAttributes","parseHTML","tag","style","consuming","getAttrs","includes","renderHTML","options","addCommands","setUnderline","commands","setMark","toggleUnderline","toggleMark","unsetUnderline","unsetMark","addKeyboardShortcuts","Mod-u","editor","Mod-U","index_default"],"sources":["C:\\Users\\01\\vettam-editor\\node_modules\\@tiptap\\extension-underline\\src\\underline.ts","C:\\Users\\01\\vettam-editor\\node_modules\\@tiptap\\extension-underline\\src\\index.ts"],"sourcesContent":["import { Mark, mergeAttributes } from '@tiptap/core'\n\nexport interface UnderlineOptions {\n  /**\n   * HTML attributes to add to the underline element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    underline: {\n      /**\n       * Set an underline mark\n       * @example editor.commands.setUnderline()\n       */\n      setUnderline: () => ReturnType\n      /**\n       * Toggle an underline mark\n       * @example editor.commands.toggleUnderline()\n       */\n      toggleUnderline: () => ReturnType\n      /**\n       * Unset an underline mark\n       * @example editor.commands.unsetUnderline()\n       */\n      unsetUnderline: () => ReturnType\n    }\n  }\n}\n\n/**\n * This extension allows you to create underline text.\n * @see https://www.tiptap.dev/api/marks/underline\n */\nexport const Underline = Mark.create<UnderlineOptions>({\n  name: 'underline',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'u',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('underline') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setUnderline:\n        () =>\n        ({ commands }) => {\n          return commands.setMark(this.name)\n        },\n      toggleUnderline:\n        () =>\n        ({ commands }) => {\n          return commands.toggleMark(this.name)\n        },\n      unsetUnderline:\n        () =>\n        ({ commands }) => {\n          return commands.unsetMark(this.name)\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-u': () => this.editor.commands.toggleUnderline(),\n      'Mod-U': () => this.editor.commands.toggleUnderline(),\n    }\n  },\n})\n","import { Underline } from './underline.js'\n\nexport * from './underline.js'\n\nexport default Underline\n"],"mappings":";AAAA,SAASA,IAAA,EAAMC,eAAA,QAAuB;AAqC/B,IAAMC,SAAA,GAAYF,IAAA,CAAKG,MAAA,CAAyB;EACrDC,IAAA,EAAM;EAENC,WAAA,EAAa;IACX,OAAO;MACLC,cAAA,EAAgB,CAAC;IACnB;EACF;EAEAC,UAAA,EAAY;IACV,OAAO,CACL;MACEC,GAAA,EAAK;IACP,GACA;MACEC,KAAA,EAAO;MACPC,SAAA,EAAW;MACXC,QAAA,EAAUF,KAAA,IAAWA,KAAA,CAAiBG,QAAA,CAAS,WAAW,IAAI,CAAC,IAAI;IACrE,EACF;EACF;EAEAC,WAAW;IAAEP;EAAe,GAAG;IAC7B,OAAO,CAAC,KAAKL,eAAA,CAAgB,KAAKa,OAAA,CAAQR,cAAA,EAAgBA,cAAc,GAAG,CAAC;EAC9E;EAEAS,YAAA,EAAc;IACZ,OAAO;MACLC,YAAA,EACEA,CAAA,KACA,CAAC;QAAEC;MAAS,MAAM;QAChB,OAAOA,QAAA,CAASC,OAAA,CAAQ,KAAKd,IAAI;MACnC;MACFe,eAAA,EACEA,CAAA,KACA,CAAC;QAAEF;MAAS,MAAM;QAChB,OAAOA,QAAA,CAASG,UAAA,CAAW,KAAKhB,IAAI;MACtC;MACFiB,cAAA,EACEA,CAAA,KACA,CAAC;QAAEJ;MAAS,MAAM;QAChB,OAAOA,QAAA,CAASK,SAAA,CAAU,KAAKlB,IAAI;MACrC;IACJ;EACF;EAEAmB,qBAAA,EAAuB;IACrB,OAAO;MACL,SAASC,CAAA,KAAM,KAAKC,MAAA,CAAOR,QAAA,CAASE,eAAA,CAAgB;MACpD,SAASO,CAAA,KAAM,KAAKD,MAAA,CAAOR,QAAA,CAASE,eAAA,CAAgB;IACtD;EACF;AACF,CAAC;;;ACrFD,IAAOQ,aAAA,GAAQzB,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}