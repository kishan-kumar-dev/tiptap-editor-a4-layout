{"ast":null,"code":"import { Mark } from '@tiptap/core';\nexport const CustomFontFamily = Mark.create({\n  name: 'fontFamily',\n  addAttributes() {\n    return {\n      fontFamily: {\n        default: null,\n        parseHTML: element => {\n          var _element$style$fontFa;\n          return (_element$style$fontFa = element.style.fontFamily) === null || _element$style$fontFa === void 0 ? void 0 : _element$style$fontFa.replace(/['\"]/g, '');\n        },\n        renderHTML: attributes => {\n          if (!attributes.fontFamily) {\n            return {};\n          }\n          return {\n            style: `font-family: ${attributes.fontFamily}`\n          };\n        }\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      style: 'font-family'\n    }];\n  },\n  // ❌ DO NOT use custom renderHTML here for marks — REMOVE it\n\n  addCommands() {\n    return {\n      setFontFamily: fontFamily => ({\n        commands\n      }) => {\n        return commands.setMark(this.name, {\n          fontFamily\n        });\n      },\n      unsetFontFamily: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  }\n});","map":{"version":3,"names":["Mark","CustomFontFamily","create","name","addAttributes","fontFamily","default","parseHTML","element","_element$style$fontFa","style","replace","renderHTML","attributes","addCommands","setFontFamily","commands","setMark","unsetFontFamily","unsetMark"],"sources":["C:/Users/01/vettam-editor/src/extensions/FontFamily.ts"],"sourcesContent":["import { Mark } from '@tiptap/core';\r\n\r\ndeclare module '@tiptap/core' {\r\n  interface MarkConfig {\r\n    fontFamily?: string;\r\n  }\r\n}\r\n\r\nexport const CustomFontFamily = Mark.create({\r\n  name: 'fontFamily',\r\n\r\n  addAttributes() {\r\n    return {\r\n      fontFamily: {\r\n        default: null,\r\n        parseHTML: (element) => element.style.fontFamily?.replace(/['\"]/g, ''),\r\n        renderHTML: (attributes) => {\r\n          if (!attributes.fontFamily) {\r\n            return {};\r\n          }\r\n          return {\r\n            style: `font-family: ${attributes.fontFamily}`,\r\n          };\r\n        },\r\n      },\r\n    };\r\n  },\r\n\r\n  parseHTML() {\r\n    return [\r\n      {\r\n        style: 'font-family',\r\n      },\r\n    ];\r\n  },\r\n\r\n  // ❌ DO NOT use custom renderHTML here for marks — REMOVE it\r\n\r\n  addCommands() {\r\n    return {\r\n      setFontFamily:\r\n        (fontFamily: string) =>\r\n        ({ commands }) => {\r\n          return commands.setMark(this.name, { fontFamily });\r\n        },\r\n      unsetFontFamily:\r\n        () =>\r\n        ({ commands }) => {\r\n          return commands.unsetMark(this.name);\r\n        },\r\n    };\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,cAAc;AAQnC,OAAO,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,MAAM,CAAC;EAC1CC,IAAI,EAAE,YAAY;EAElBC,aAAaA,CAAA,EAAG;IACd,OAAO;MACLC,UAAU,EAAE;QACVC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAGC,OAAO;UAAA,IAAAC,qBAAA;UAAA,QAAAA,qBAAA,GAAKD,OAAO,CAACE,KAAK,CAACL,UAAU,cAAAI,qBAAA,uBAAxBA,qBAAA,CAA0BE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;QAAA;QACtEC,UAAU,EAAGC,UAAU,IAAK;UAC1B,IAAI,CAACA,UAAU,CAACR,UAAU,EAAE;YAC1B,OAAO,CAAC,CAAC;UACX;UACA,OAAO;YACLK,KAAK,EAAE,gBAAgBG,UAAU,CAACR,UAAU;UAC9C,CAAC;QACH;MACF;IACF,CAAC;EACH,CAAC;EAEDE,SAASA,CAAA,EAAG;IACV,OAAO,CACL;MACEG,KAAK,EAAE;IACT,CAAC,CACF;EACH,CAAC;EAED;;EAEAI,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLC,aAAa,EACVV,UAAkB,IACnB,CAAC;QAAEW;MAAS,CAAC,KAAK;QAChB,OAAOA,QAAQ,CAACC,OAAO,CAAC,IAAI,CAACd,IAAI,EAAE;UAAEE;QAAW,CAAC,CAAC;MACpD,CAAC;MACHa,eAAe,EACbA,CAAA,KACA,CAAC;QAAEF;MAAS,CAAC,KAAK;QAChB,OAAOA,QAAQ,CAACG,SAAS,CAAC,IAAI,CAAChB,IAAI,CAAC;MACtC;IACJ,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}